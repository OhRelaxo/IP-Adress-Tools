Idee:
Ein cli-tool welches: subnet ausrechnen, ipv4 in ipv6 umwandeln, ipv6 verk√ºrzen und verl√§ngern
Optional mit tkinter eine GUI machen oder eine website mit html, csv export?

NO CIDR!!!!!!üò°

Todo:
mit uv kompatibel machen

subnet ausrechnen:
besseres error handling in subnet_calc

ipv4 in ipv6 umwandlung schreiben:
vlt eine csv oder json als input (mit key) und dann alle konvertieren?

Damit alte IPv4-Systeme weiterhin im neuen IPv6 Netz funktionieren, wird eine Regelung zur
‚ÄûAbw√§rtskompatibilit√§t" ben√∂tigt:
IPv4-Adresse:   139.80.34(dez) -> 8B.50.22.5(hex)
kompatible IPv6-Adresse: 0:0:0:0:0:ffff:8B50:2205 oder ::ffff:8B50:2205
Schritt 1: Jeder Dezimalblock der alten IPv4 Adresse wird in eine Hexadezimalzahl umgewandelt.
Diese bilden nun die rechten beiden Bl√∂cke der IPv6-Adresse.
Schritt 2: Vor die umgewandelte IPv4-Adresse wird ein Block mit ‚Äûfff erg√§nzt.
Schritt 3: Die √ºbrigen 5 Bl√∂cke der IPv6 Adresse werden von links mit Nullen aufgef√ºllt.

csv Import:

welche arten von csv k√∂nnen importiert werden?
den Namen der Datei, diese muss dann auch in dem Verzeichnis des Programms liegen!
welche Zeile der csv hat die ipv4 adressen?
vlt nur die Zeile importieren oder danach nach der Zeile filtern
durch alle IP-Adressen iterieren und die Erstellte ipv6 Adresse in eine Liste speichern,
diese kann dann mit --verbose auch ausgegeben werden, ansonsten wird die Liste einfach in eine neue csv datei gespeichert.

ipv6 verk√ºrzen und verl√§ngern:

1. f√ºhrende Nullen k√∂nnen weggelassen werden
split(":")
if len(block) < 1:
    continue
startswith("0")
2. mehrere aufeinanderfolgende 0000 Bl√∂cke (mind. 2 Bl√∂cke)
k√∂nnen mit :: zusammengefasst werden, dass darf nur einmal angewendet werden!


